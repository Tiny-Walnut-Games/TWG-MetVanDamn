#!/usr/bin/env python3
"""
Sacred Auto-TLDL Generator
Creates TLDL entries from AI collaboration context
"""
import json
import os
import datetime
from pathlib import Path

def generate_tldl_content(significance_data, commit_info):
    """Generate TLDL content from analysis"""
    timestamp = datetime.datetime.now().strftime("%Y-%m-%d")
    
    # Extract key information
    ai_markers = significance_data.get('detected_ai_markers', [])
    tech_types = significance_data.get('detected_tech_types', [])
    total_score = significance_data.get('total_significance_score', 0)
    
    # Generate title
    if 'architecture' in tech_types:
        title_type = "ArchitecturalEvolution"
    elif 'integration' in tech_types:
        title_type = "IntegrationQuest"
    elif 'new_feature' in tech_types:
        title_type = "FeatureForge"
    else:
        title_type = "CollaborationChronicle"
    
    tldl_title = "TLDL-{}-{}-AIAssisted".format(timestamp, title_type)
    
    # Generate content
    content = """# {}

## üéØ Achievement Unlocked: AI-Assisted Development

**Entry ID**: MVD-{}  
**Author**: AI Collaboration Detector + Human Developer  
**Context**: Automated TLDL generation from detected AI assistance  
**Significance Score**: {}/100  

## üßô‚Äç‚ôÇÔ∏è The Sacred Collaboration

### AI Markers Detected
{}

### Technical Categories
{}

## üìä Change Analysis

**Commit Message**: {}  
**Files Modified**: {}  
**Collaboration Type**: AI-Assisted Development  

## üîÆ Sacred Lore

This entry was automatically generated by the Sacred AI Collaboration Detection System. 
The changes were deemed significant enough (score: {}) to warrant preservation 
in the Living Dev Log for future adventurers.

### üß∞ Technical Context
- **Repository State**: {}[:8]
- **Branch**: {}
- **Trigger**: {}

## üõ°Ô∏è Cheek Preservation Notes

Auto-generated entries preserve the sacred knowledge of AI collaboration sessions 
that might otherwise be lost to the void of unrecorded development history.

## üé≠ Next Quests

Future developers reviewing this entry should:
1. Examine the associated commit for context
2. Consider how the AI assistance pattern can be replicated
3. Update this entry with additional insights if needed

*Generated by the Sacred AI Collaboration Detection System*  
*"No Sacred Symbol shall be left unpreserved!"* üßô‚Äç‚ôÇÔ∏è‚öîÔ∏è‚ú®
""".format(
        tldl_title,
        tldl_title,
        total_score,
        chr(10).join("- {}".format(marker) for marker in ai_markers),
        chr(10).join("- {}".format(category.title()) for category in tech_types),
        commit_info.get('message', 'N/A'),
        commit_info.get('file_count', 0),
        total_score,
        commit_info.get('sha', 'Unknown')[:8],
        commit_info.get('branch', 'main'),
        commit_info.get('trigger', 'push')
    )
    
    return tldl_title, content

if __name__ == "__main__":
    # Load significance data
    with open('significance_result.json', 'r') as f:
        significance_data = json.load(f)
    
    # Get commit info from environment
    commit_info = {
        'message': os.getenv('COMMIT_MESSAGE', ''),
        'sha': os.getenv('GITHUB_SHA', ''),
        'branch': os.getenv('GITHUB_REF_NAME', ''),
        'trigger': os.getenv('GITHUB_EVENT_NAME', ''),
        'file_count': significance_data.get('file_count', 0)
    }
    
    # Generate TLDL
    title, content = generate_tldl_content(significance_data, commit_info)
    
    # Write TLDL file
    tldl_path = "docs/{}.md".format(title)
    with open(tldl_path, 'w') as f:
        f.write(content)
    
    print("‚úÖ Generated TLDL: {}".format(tldl_path))
    print("::set-output name=created::true")
    print("::set-output name=path::{}".format(tldl_path))
    print("::set-output name=title::{}".format(title))