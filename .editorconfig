root = true

[*]
charset = utf-8
end_of_line = lf
indent_style = tab
indent_size = 4
insert_final_newline = true
trim_trailing_whitespace = true
dotnet_style_operator_placement_when_wrapping = beginning_of_line
tab_width = 4
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:error
dotnet_style_prefer_auto_properties = true:error

[*.md]
trim_trailing_whitespace = false

[*.py]
indent_size = 4

[*.cs]
indent_size = 4

# ==================================================
# 🧙‍♂️ TACTICAL SYMBOL ENFORCEMENT PROTOCOL
# "Force AI assistants to see real problems, protect meaningful symbols"
# "Perfect is the enemy of good - aim for >95% symbol preservation"
# ==================================================

# UNRESOLVED SYMBOLS - These are REAL ERRORS that AI must fix (your forcing function!)
dotnet_diagnostic.CS0103.severity = error  # Name does not exist in current context - MUST FIX
dotnet_diagnostic.CS0246.severity = error  # Type or namespace not found - MUST FIX  
dotnet_diagnostic.CS0234.severity = error  # Type/namespace does not exist in namespace - MUST FIX
dotnet_diagnostic.CS0117.severity = error  # Does not contain definition - MUST FIX
dotnet_diagnostic.CS0104.severity = error  # Ambiguous reference - MUST FIX
dotnet_diagnostic.CS0119.severity = error  # Expression denotes a type but is used as variable - MUST FIX

# DECLARED BUT NEVER USED - These are REAL PROBLEMS that need purpose or fixing
dotnet_diagnostic.CS0219.severity = error  # Variable assigned but never used - FIND PURPOSE OR FIX
dotnet_diagnostic.CS0168.severity = error  # Variable declared but never used - FIND PURPOSE OR FIX  
dotnet_diagnostic.CS0414.severity = error  # Field assigned but never used - FIND PURPOSE OR FIX
dotnet_diagnostic.CS0169.severity = error  # Field never used - FIND PURPOSE OR FIX

# SACRED SYMBOL PRESERVATION - These are ENHANCEMENT OPPORTUNITIES, not deletions
dotnet_diagnostic.IDE0059.severity = suggestion # "Unnecessary" assignment - MAKE IT COORDINATE-AWARE
dotnet_diagnostic.IDE0060.severity = suggestion # "Unused" parameter - ADD SPATIAL INTELLIGENCE  
dotnet_diagnostic.IDE0051.severity = suggestion # "Private member never used" - FIND CREATIVE PURPOSE
dotnet_diagnostic.IDE0052.severity = suggestion # "Private member can be removed" - TRANSFORM TO DEBUG AID

# STYLE AND OPTIMIZATION - Suggestions for improvement, not deletion mandates  
dotnet_diagnostic.CA1822.severity = suggestion  # Member can be static - BUT CONSIDER NODEIDS FIRST
dotnet_diagnostic.CA1823.severity = suggestion  # Unused private fields - MAKE THEM COORDINATE-AWARE
dotnet_diagnostic.CA1801.severity = suggestion  # Unused parameters - USE FOR DEBUGGING/LOGGING

# ==================================================
# 🎯 THE TACTICAL DIFFERENCE:
# CS#### errors = "This code won't compile or has undefined references" → ERROR (forces AI attention)
# IDE#### warnings = "This could be optimized or simplified" → SUGGESTION (preserve and enhance)
# Like GPU mesh generation: >95% success rate across all systems is engineering excellence!
# ==================================================

# Performance guidelines (not deletion mandates)
csharp_prefer_braces = when_multiline:suggestion
csharp_prefer_simple_using_statement = true:suggestion
csharp_style_var_for_built_in_types = false:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = false:suggestion

dotnet_style_prefer_auto_properties = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion

# Unity/ECS guidelines (enhance, don't delete)
dotnet_diagnostic.UNT0001.severity = suggestion
dotnet_diagnostic.UNT0002.severity = suggestion
dotnet_diagnostic.UNT0014.severity = suggestion

# DOTS/Burst enhancement opportunities
dotnet_diagnostic.DOTS0001.severity = suggestion
dotnet_diagnostic.DOTS0002.severity = suggestion
csharp_indent_labels = one_less_than_current
csharp_using_directive_placement = outside_namespace:silent
csharp_style_namespace_declarations = block_scoped:silent
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent
csharp_style_prefer_primary_constructors = true:suggestion
csharp_prefer_system_threading_lock = true:suggestion
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:silent
csharp_indent_braces = true
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = true:silent
csharp_prefer_static_local_function = true:suggestion
csharp_prefer_static_anonymous_function = true:suggestion
csharp_style_prefer_readonly_struct = true:suggestion
csharp_style_prefer_readonly_struct_member = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
dotnet_diagnostic.EA0010.severity = error
dotnet_diagnostic.UNT0008.severity = error
csharp_style_unused_value_assignment_preference = unused_local_variable:error
dotnet_diagnostic.UNT0012.severity = error
dotnet_diagnostic.UNT0030.severity = error
dotnet_diagnostic.UNT0029.severity = error
dotnet_diagnostic.UNT0026.severity = error
dotnet_diagnostic.EA0016.severity = error
dotnet_diagnostic.UNT0003.severity = error
csharp_style_throw_expression = true:suggestion
csharp_style_prefer_null_check_over_type_check = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_prefer_local_over_anonymous_function = true:suggestion
csharp_style_prefer_index_operator = true:error
csharp_style_prefer_range_operator = true:error
csharp_style_implicit_object_creation_when_type_is_apparent = true:error
csharp_style_prefer_implicitly_typed_lambda_expression = true:error
csharp_style_prefer_tuple_swap = true:error
csharp_style_prefer_unbound_generic_type_in_nameof = true:suggestion
csharp_style_prefer_utf8_string_literals = true:suggestion
csharp_style_deconstructed_variable_declaration = true:error
csharp_style_unused_value_expression_statement_preference = unused_local_variable:silent
csharp_style_allow_embedded_statements_on_same_line_experimental = true:silent
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = true:silent
csharp_style_allow_blank_line_after_token_in_conditional_expression_experimental = true:silent
csharp_style_allow_blank_line_after_token_in_arrow_expression_clause_experimental = true:silent
csharp_style_conditional_delegate_call = true:suggestion
csharp_style_prefer_switch_expression = true:suggestion
csharp_style_prefer_pattern_matching = true:suggestion
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_prefer_not_pattern = true:suggestion
csharp_style_prefer_extended_property_pattern = true:suggestion

# ==================================================
# 🧮 SACRED ENHANCEMENT EXAMPLES
# 
# WHEN YOU SEE CS0103 (Name does not exist): This is a REAL ERROR - fix the reference!
# WHEN YOU SEE IDE0059 (Unnecessary assignment): This is an ENHANCEMENT OPPORTUNITY - make it coordinate-aware!
#
# The difference: CS errors break compilation, IDE suggestions improve code quality
# Just like GPU mesh data: we aim for >95% preservation success across all AI systems
# ==================================================

[*.{yml,yaml}]
indent_size = 2

[*.json]
indent_size = 2

[*.sh]
indent_size = 2

[*.{cs,vb}]
#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers = 

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers = 

# Naming styles

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix = 
dotnet_naming_style.begins_with_i.word_separator = 
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_prefer_simplified_interpolation = true:suggestion
dotnet_style_require_accessibility_modifiers = for_non_interface_members:silent
dotnet_style_qualification_for_field = false:silent
dotnet_style_qualification_for_property = false:silent
dotnet_style_qualification_for_method = false:silent
dotnet_style_qualification_for_event = false:silent
dotnet_code_quality_unused_parameters = all:error
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_collection_expression = when_types_loosely_match:suggestion
dotnet_style_namespace_match_folder = true:suggestion
dotnet_style_readonly_field = true:silent
dotnet_style_predefined_type_for_locals_parameters_members = true:silent
dotnet_style_predefined_type_for_member_access = true:silent
dotnet_style_allow_multiple_blank_lines_experimental = true:silent
dotnet_style_allow_statement_immediately_after_block_experimental = true:silent
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent
