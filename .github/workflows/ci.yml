name: Living Dev Agent CI

# Optimized CI with concurrency controls, path filters, and Guarded Pass system
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

# Cancel in-progress runs for the same branch to save CI minutes
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # ⚡ Fast structure preflight check - fails in seconds for common issues
  structure-preflight:
    runs-on: ubuntu-latest
    steps:
      - name: Shallow checkout for structure check
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v5
        with:
          fetch-depth: 1

      - name: Structure Preflight Check
        run: |
          chmod +x scripts/structure-preflight.sh scripts/guarded-pass.sh
          ./scripts/guarded-pass.sh "structure-check" ./scripts/structure-preflight.sh

  # ✅ Core validation job: sets up Python, installs dependencies, and runs key validation scripts
  validate:
    runs-on: ubuntu-latest
    needs: structure-preflight
    # Only run on changes to relevant files
    if: >
      github.event_name == 'push' ||
      (github.event_name == 'pull_request' && (
        contains(github.event.pull_request.changed_files.*.filename, 'src/') ||
        contains(github.event.pull_request.changed_files.*.filename, 'scripts/') ||
        contains(github.event.pull_request.changed_files.*.filename, 'docs/') ||
        contains(github.event.pull_request.changed_files.*.filename, 'TLDL/') ||
        contains(github.event.pull_request.changed_files.*.filename, '.github/')
      ))
    steps:
      - name: Checkout repository 
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v5
        with:
          fetch-depth: 1  # Shallow clone for speed

      # Set up Python with dependency caching
      - name: Set up Python
        uses: actions/setup-python@9322b3ca74000aeb2c01eb777b646334015ddd72 # v5.3.2
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'scripts/requirements.txt'

      # Install required dependencies (now cached)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/requirements.txt
      # 🔒 Validate package installation with fail-fast logic (addresses issue #50)
      - name: Validate Package Installation Security
        run: |
          chmod +x scripts/validate_package_install.sh
          timeout 60 scripts/validate_package_install.sh

      # Initialize agent context with verbose dry-run for debugging clarity
      - name: Initialize Agent Context
        run: |
          chmod +x scripts/init_agent_context.sh
          scripts/init_agent_context.sh --dry-run --verbose

      # 🛡️ Run validation checks with Guarded Pass wrapper
      - name: Run validation checks (Guarded Pass)
        run: |
          chmod +x scripts/guarded-pass.sh
          ./scripts/guarded-pass.sh "docs-validator" python src/SymbolicLinter/validate_docs.py --tldl-path TLDL/entries/ --config-path docs/
          python src/SymbolicLinter/symbolic_linter.py --path src/
          python src/DebugOverlayValidation/debug_overlay_validator.py --path src/DebugOverlayValidation/
          
      # 🔒 MCP security configuration validation (addresses issue #50)
      - name: Validate MCP Security Configuration 
        run: |
          python scripts/validate_mcp_config.py --strict
          
      # 🔐 Token scope validation (addresses issue #50 secret scope concerns)
      - name: Validate CI Token Scopes
        run: |
          echo "🔐 Validating CI token scopes for minimal permissions..."
          echo "GITHUB_TOKEN scopes: repo, workflow (read-only where possible)"
          echo "⚠️  Manual verification required: Ensure tokens have minimal required scopes"
          
  # 🎮 Unity test runner for MetVanDAMN - Edit mode, Play mode tests  
  unity-tests:
    runs-on: ubuntu-latest
    needs: structure-preflight
    # Only run on changes to Unity assets, packages, or assemblies
    if: >
      github.event_name == 'push' ||
      (github.event_name == 'pull_request' && (
        contains(github.event.pull_request.changed_files.*.filename, 'Assets/') ||
        contains(github.event.pull_request.changed_files.*.filename, 'Packages/') ||
        contains(github.event.pull_request.changed_files.*.filename, 'ProjectSettings/') ||
        contains(github.event.pull_request.changed_files.*.filename, '.asmdef')
      ))
    steps:
      - name: Checkout repository
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v5
        with:
          fetch-depth: 1
          lfs: true

      - name: Cache Unity Library
        uses: actions/cache@0400d5f1c84a6c7a4a4e6a2d5c4f3b4e8e1d9c5b # v4.2.4
        with:
          path: Library
          key: Library-${{ runner.os }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: Library-${{ runner.os }}-

      # ⚡ Cache Unity Package Manager downloads for faster package resolution
      - name: Cache Unity UPM
        uses: actions/cache@0400d5f1c84a6c7a4a4e6a2d5c4f3b4e8e1d9c5b # v4.2.4
        with:
          path: |
            Library/PackageCache
            ~/.config/unity3d
          key: unity-upm-${{ runner.os }}-${{ hashFiles('Packages/manifest.json', 'Packages/packages-lock.json') }}
          restore-keys: unity-upm-${{ runner.os }}-

      # Unity Edit Mode Tests
      - name: Run Unity Edit Mode Tests
        uses: game-ci/unity-test-runner@d4c8dea0ae32a2cb4a9e27c2b7b8a9c2fda66f8d # v4
        id: editModeTests
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: .
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          testMode: EditMode
          checkName: Unity Edit Mode Tests
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport'

      # Unity Play Mode Tests  
      - name: Run Unity Play Mode Tests
        uses: game-ci/unity-test-runner@d4c8dea0ae32a2cb4a9e27c2b7b8a9c2fda66f8d # v4
        id: playModeTests
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: .
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          testMode: PlayMode
          checkName: Unity Play Mode Tests
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport'

      # Upload test results
      - name: Upload Unity Test Results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: always()
        with:
          name: unity-test-results
          path: |
            artifacts/editmode-results.xml
            artifacts/playmode-results.xml
            CodeCoverage/
          retention-days: 30

      # Archive coverage reports
      - name: Upload Coverage Reports  
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: always()
        with:
          name: unity-coverage-reports
          path: CodeCoverage/
          retention-days: 30

  # 🛡️ Final checkpoint job to certify validation success and log summary
  buttsafe-certification:
    runs-on: ubuntu-latest
    needs: [validate, unity-tests]  # Wait for both validation and Unity tests
    if: always()  # Run even if Unity tests are skipped
    steps:
      - name: Checkout repository
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v5
        with:
          fetch-depth: 1

      - name: Check job statuses
        run: |
          echo "📊 Job Status Summary:"
          echo "Validation: ${{ needs.validate.result }}"
          echo "Unity Tests: ${{ needs.unity-tests.result }}"
          
          if [[ "${{ needs.validate.result }}" == "success" ]]; then
            echo "✅ Core validation passed"
          else
            echo "❌ Core validation failed"
          fi
          
          if [[ "${{ needs.unity-tests.result }}" == "success" ]]; then
            echo "✅ Unity tests passed"
          elif [[ "${{ needs.unity-tests.result }}" == "skipped" ]]; then
            echo "⏭️ Unity tests skipped (no Unity changes)"
          else
            echo "❌ Unity tests failed"
          fi

      - name: Confirm validation success
        run: |
          if [[ "${{ needs.validate.result }}" == "success" || "${{ needs.validate.result }}" == "skipped" ]]; then
            echo "✅ All required validation jobs completed successfully (including skipped validations)."
            echo "🛡️ Buttsafe Certification Achieved."
            echo "This marks the final checkpoint before merge or deployment."
          else
            echo "❌ Validation failed. Please check the logs above."
            exit 1
          fi

      - name: Display recent commit info
        run: |
          echo "🔍 Commit Summary:"
          git log -1 --pretty=format:"%h - %s (%an)"

  # 🧱 Structure validation job - ADVISORY (continues on error)
  validate-structure:
    runs-on: ubuntu-latest
    name: Validate Repository Structure
    continue-on-error: true  # Advisory job - don't block merges
    # Only run on structure-related changes
    if: >
      github.event_name == 'push' ||
      (github.event_name == 'pull_request' && (
        contains(github.event.pull_request.changed_files.*.filename, 'scripts/') ||
        contains(github.event.pull_request.changed_files.*.filename, 'docs/') ||
        contains(github.event.pull_request.changed_files.*.filename, 'TLDL/') ||
        contains(github.event.pull_request.changed_files.*.filename, '.github/')
      ))
    steps:
      - name: Checkout repository
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v5
        with:
          fetch-depth: 1

      - name: Validate template structure
        run: |
          chmod +x scripts/init_agent_context.sh
          ./scripts/init_agent_context.sh --dry-run

      - name: Run document validation with Guarded Pass
        run: |
          chmod +x scripts/guarded-pass.sh  
          ./scripts/guarded-pass.sh "docs-validator" python src/SymbolicLinter/validate_docs.py --tldl-path TLDL/entries/ --config-path docs/

      - name: Run system linting
        run: |
          python src/SymbolicLinter/system_linter.py --path src/

      # Archive detailed results for review
      - name: Archive structure validation results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: always()
        with:
          name: structure-validation-results
          path: |
            validation-*.log
            structure-*.json
          retention-days: 30

  # 🧪 IDE compatibility matrix test - ADVISORY (minimal matrix for efficiency)
  test-ide-compatibility:
    runs-on: ubuntu-latest
    continue-on-error: true  # Advisory job - don't block merges
    strategy:
      matrix:
        ide: [vscode, omnisharp]  # Reduced from 3 to 2 - remove jetbrains for efficiency
    name: Test IDE Compatibility - ${{ matrix.ide }}
    # Only run on IDE config changes
    if: >
      github.event_name == 'push' ||
      (github.event_name == 'pull_request' && (
        contains(github.event.pull_request.changed_files.*.filename, '.vscode/') ||
        contains(github.event.pull_request.changed_files.*.filename, 'omnisharp.json') ||
        contains(github.event.pull_request.changed_files.*.filename, '.idea/')
      ))
    steps:
      - name: Checkout repository
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v5
        with:
          fetch-depth: 1

      - name: Test VS Code configuration
        if: matrix.ide == 'vscode'
        run: |
          if [ -f .vscode/settings.json ]; then
            python -m json.tool .vscode/settings.json > /dev/null
            echo "✅ VS Code settings.json is valid"
          fi

      - name: Test OmniSharp configuration
        if: matrix.ide == 'omnisharp'
        run: |
          if [ -f omnisharp.json ]; then
            python -m json.tool omnisharp.json > /dev/null
            echo "✅ OmniSharp configuration is valid"
          fi

      # Archive IDE compatibility results
      - name: Archive IDE compatibility results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: always()
        with:
          name: ide-compatibility-${{ matrix.ide }}-results
          path: |
            ide-test-*.log
            compatibility-*.json
          retention-days: 7

  # 🧰 CLI tool validation for LDA commands - ADVISORY
  test-cli-tool:
    runs-on: ubuntu-latest
    name: Test LDA CLI Tool
    continue-on-error: true  # Advisory job - don't block merges
    # Only run on CLI-related changes
    if: >
      github.event_name == 'push' ||
      (github.event_name == 'pull_request' && (
        contains(github.event.pull_request.changed_files.*.filename, 'scripts/lda') ||
        contains(github.event.pull_request.changed_files.*.filename, 'scripts/') ||
        contains(github.event.pull_request.changed_files.*.filename, '.agent-profile.yaml')
      ))
    steps:
      - name: Checkout repository
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v5
        with:
          fetch-depth: 1

      - name: Set up Python (cached)
        uses: actions/setup-python@9322b3ca74000aeb2c01eb777b646334015ddd72 # v5.6.0
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'scripts/requirements.txt'

      - name: Install dependencies with retry logic
        run: |
          python -m pip install --upgrade pip
          # Retry logic for network resilience
          for i in {1..3}; do
            if pip install -r scripts/requirements.txt; then break; fi
            echo "Attempt $i failed, retrying in 5 seconds..."
            sleep 5
          done

      - name: Test CLI commands
        run: |
          if [ -f scripts/lda ]; then
            chmod +x scripts/lda
            ./scripts/lda --help
            ./scripts/lda init --help
            ./scripts/lda snapshot --help
            ./scripts/lda profile --help
          else
            echo "⚠️ LDA CLI tool not yet implemented"
          fi

      # Archive CLI test results
      - name: Archive CLI test results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: always()
        with:
          name: cli-test-results
          path: |
            cli-test-*.log
            lda-*.json
          retention-days: 7

  # 🧬 Agent profile system validation - ADVISORY
  test-agent-profiles:
    runs-on: ubuntu-latest
    name: Test Agent Profile System
    continue-on-error: true  # Advisory job - don't block merges
    # Only run on agent profile related changes
    if: >
      github.event_name == 'push' ||
      (github.event_name == 'pull_request' && (
        contains(github.event.pull_request.changed_files.*.filename, '.agent-profile.yaml') ||
        contains(github.event.pull_request.changed_files.*.filename, 'agent-profile.yaml') ||
        contains(github.event.pull_request.changed_files.*.filename, 'tests/agent-profiles/')
      ))
    steps:
      - name: Checkout repository
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v5
        with:
          fetch-depth: 1
      
      - name: Setup Python (cached)
        uses: actions/setup-python@9322b3ca74000aeb2c01eb777b646334015ddd72 # v5.6.0
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          # Try to install PyYAML and argparse with retry logic, but don't fail if they're already available
          for i in {1..3}; do
            if pip install PyYAML argparse 2>/dev/null; then break; fi
            echo "⚠️ Attempt $i failed, retrying in 5 seconds..."
            sleep 5
          done || echo "⚠️ Some dependencies may already be available"
          
      - name: Run Agent Profile System Tests
        run: |
          echo "🧬 Testing Agent Profile System..."
          python3 tests/agent-profiles/test_runner.py
          
      - name: Agent Profile System Healthy
        run: |
          echo "✅ Agent Profile System validation complete!"
          echo "🛡️ All cheeks preserved successfully! 🙌"

      # Archive agent profile test results
      - name: Archive agent profile test results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: always()
        with:
          name: agent-profile-test-results
          path: |
            agent-profile-*.log
            profile-test-*.json
          retention-days: 7
