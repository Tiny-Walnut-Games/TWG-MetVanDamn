name: 🧙‍♂️ AI Collaboration Auto-Documentation

on:
  # Trigger on commits with AI collaboration markers
  push:
    branches: [main, develop, feature/*, fix/*]
  
  # Trigger on PR completion for comprehensive TLDL generation
  pull_request:
    types: [closed]
    branches: [main, develop]

  # Manual trigger for testing the Sacred Assimilation Protocol
  workflow_dispatch:
    inputs:
      force_tldl_creation:
        description: 'Force TLDL creation regardless of significance score'
        required: false
        type: boolean
        default: false
      ai_context_override:
        description: 'Override detected AI context (for testing)'
        required: false
        type: string

jobs:
  ai_collaboration_detection:
    runs-on: ubuntu-latest
    name: 🔍 Sacred Symbol Detection & Auto-Documentation
    
    permissions:
      contents: write
      pull-requests: write
    
    # Only run if AI collaboration markers detected OR manual override
    if: >
      contains(github.event.head_commit.message, '🧙‍♂️') ||
      contains(github.event.head_commit.message, 'AI:') ||
      contains(github.event.head_commit.message, 'Copilot:') ||
      contains(github.event.head_commit.message, 'Co-authored-by:') ||
      github.event.inputs.force_tldl_creation == 'true' ||
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    
    outputs:
      tldl_created: ${{ steps.tldl_generation.outputs.created }}
      significance_score: ${{ steps.significance_assessment.outputs.score }}
      oracle_prediction: ${{ steps.oracle_invocation.outputs.prediction_id }}
    
    steps:
      - name: 🎯 Checkout Sacred Repository
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v5
        with:
          fetch-depth: 50  # Need history for context analysis
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 🐍 Set up Python for Sacred Rituals
        uses: actions/setup-python@9322b3ca74000aeb2c01eb777b646334015ddd72 # v5.6.0
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'scripts/requirements.txt'
      
      - name: ⚡ Install Sacred Dependencies
        run: |
          echo "🔧 Installing Sacred Dependencies..."
          timeout 60 pip install -r scripts/requirements.txt || echo "⚠️ Network timeout acceptable - core deps pre-installed"
          
          # Ensure critical packages for AI analysis
          pip install pyyaml>=6.0 requests>=2.28.0 || echo "📦 Using pre-installed packages"
      
      - name: 🧙‍♂️ Initialize Living Dev Agent Context
        run: |
          echo "🎭 Initializing Sacred Context..."
          chmod +x scripts/init_agent_context.sh scripts/ai-collaboration-detector.py 2>/dev/null || true
          
          # Initialize context (180ms execution)
          timeout 300 scripts/init_agent_context.sh || echo "⚠️ Context init completed with warnings"
      
      - name: 🔍 Sacred Symbol Detection & Significance Assessment
        id: significance_assessment
        run: |
          echo "🔍 Analyzing commit for Sacred Symbols..."
          
          # Get commit and file information
          COMMIT_MESSAGE="${{ github.event.head_commit.message || github.event.pull_request.title }}"
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD || echo "")
          FORCE_TLDL="${{ github.event.inputs.force_tldl_creation }}"
          
          # Run significance assessment
          export COMMIT_MESSAGE="$COMMIT_MESSAGE"
          export CHANGED_FILES="$CHANGED_FILES"
          export FORCE_TLDL="$FORCE_TLDL"
          
          echo "🎯 Analyzing significance..."
          echo "Commit: $COMMIT_MESSAGE"
          echo "Files changed: $(echo "$CHANGED_FILES" | wc -l)"
          
          python3 scripts/ai-collaboration-detector.py > significance_result.json
          cat significance_result.json
      
      - name: 📜 Auto-Generate TLDL Draft
        id: tldl_generation
        if: steps.significance_assessment.outputs.worthy == 'true'
        run: |
          echo "📜 Generating Sacred TLDL Entry..."
          
          # Set environment for generator
          export COMMIT_MESSAGE="${{ github.event.head_commit.message || github.event.pull_request.title }}"
          export GITHUB_SHA="${{ github.sha }}"
          export GITHUB_REF_NAME="${{ github.ref_name }}"
          export GITHUB_EVENT_NAME="${{ github.event_name }}"
          
          # Generate TLDL
          python3 scripts/auto-tldl-generator.py
      
      - name: 🔮 Invoke Sacred Oracle
        id: oracle_invocation
        if: steps.tldl_generation.outputs.created == 'true'
        run: |
          echo "🔮 Invoking Sacred Oracle for Future Predictions..."
          
          chmod +x scripts/oracle-predictor.py
          python3 scripts/oracle-predictor.py
      
      - name: 🛡️ Sacred Validation Ritual
        if: steps.tldl_generation.outputs.created == 'true'
        run: |
          echo "🛡️ Performing Sacred Validation Ritual..."
          
          # Run TLDL validation (60ms execution)
          timeout 300 python3 src/SymbolicLinter/validate_docs.py --tldl-path docs/ || echo "⚠️ Validation completed with expected warnings"
          
          # Validate generated TLDL structure
          TLDL_FILE="${{ steps.tldl_generation.outputs.path }}"
          
          if [[ -f "$TLDL_FILE" ]]; then
            echo "✅ TLDL file exists: $TLDL_FILE"
            
            # Check required sections
            if grep -q "## 🎯 Achievement Unlocked" "$TLDL_FILE"; then
              echo "✅ Achievement section found"
            else
              echo "⚠️ Achievement section missing"
            fi
            
            if grep -q "## 🔮 Sacred Lore" "$TLDL_FILE"; then
              echo "✅ Sacred Lore section found"
            else
              echo "⚠️ Sacred Lore section missing"
            fi
            
            echo "📊 TLDL Stats:"
            wc -l "$TLDL_FILE"
          else
            echo "❌ TLDL file not found: $TLDL_FILE"
            exit 1
          fi
      
      - name: 📝 Commit Sacred Artifacts
        if: steps.tldl_generation.outputs.created == 'true'
        run: |
          echo "📝 Committing Sacred Artifacts to Repository..."
          
          # Configure git
          git config --local user.email "ai-collaboration-bot@living-dev-agent.local"
          git config --local user.name "Sacred AI Collaboration Detector"
          
          # Add generated files
          git add docs/*.md
          git add oracle_prediction.json 2>/dev/null || true
          
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "📭 No sacred artifacts to commit"
          else
            # Commit with Sacred Symbols
            git commit -m |
              📜 Sacred Auto-Documentation: ${{ steps.tldl_generation.outputs.title }}
              
              🧙‍♂️ Auto-generated TLDL from AI collaboration detection
              🔮 Oracle prediction: ${{ steps.oracle_invocation.outputs.prediction_id }}
              ⚡ Significance score: ${{ steps.significance_assessment.outputs.score }}/100
              
              Generated by Sacred AI Collaboration Detection System
            
            # Push changes
            git push origin ${{ github.ref_name }} || echo "⚠️ Push failed - will be handled by subsequent workflow"
          fi
      
      - name: 📊 Sacred Collaboration Summary
        if: always()
        run: |
          echo "## 🧙‍♂️ Sacred AI Collaboration Summary" >> $GITHUB_STEP_SUMMARY
          echo "**Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Significance Score**: ${{ steps.significance_assessment.outputs.score }}/100" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ steps.tldl_generation.outputs.created }}" == "true" ]]; then
            echo "**Status**: ✅ Sacred TLDL Generated" >> $GITHUB_STEP_SUMMARY
            echo "**TLDL Entry**: \`${{ steps.tldl_generation.outputs.title }}\`" >> $GITHUB_STEP_SUMMARY
            echo "**Oracle Prediction**: ${{ steps.oracle_invocation.outputs.wisdom }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Status**: 📭 No sacred documentation required" >> $GITHUB_STEP_SUMMARY
            echo "**Reason**: Significance score below threshold (30)" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "**AI Markers**: ${{ steps.significance_assessment.outputs.ai_markers }}" >> $GITHUB_STEP_SUMMARY
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🛡️ **Cheek Preservation Protocol**: Active and monitoring" >> $GITHUB_STEP_SUMMARY
          echo "🔮 **Oracle Status**: ${{ steps.oracle_invocation.outputs.prediction_id || 'Dormant' }}" >> $GITHUB_STEP_SUMMARY
